// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayspotAPI.Infrastructure;

#nullable disable

namespace PayspotAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220129061611_Notifications Added")]
    partial class NotificationsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AddressDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressType")
                        .HasColumnType("TEXT");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCurrentAddress")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int>("NoOfPerson")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pincode")
                        .HasColumnType("TEXT");

                    b.Property<string>("StateCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("AddressDetail");
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuardianName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nominee")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RelationShip")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AppUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.KycDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMain")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KycType")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublicId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("KycDetails");
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PendingStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Query")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Leads", (string)null);
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReadStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.StateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GstStateCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StateCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("StateName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StateMasters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GstStateCode = 35,
                            StateCode = "AN",
                            StateName = "Andaman and Nicobar Islands"
                        },
                        new
                        {
                            Id = 2,
                            GstStateCode = 37,
                            StateCode = "AP",
                            StateName = "Andhra Pradesh"
                        },
                        new
                        {
                            Id = 3,
                            GstStateCode = 12,
                            StateCode = "AR",
                            StateName = "Arunachal Pradesh"
                        },
                        new
                        {
                            Id = 4,
                            GstStateCode = 18,
                            StateCode = "AS",
                            StateName = "Assam"
                        },
                        new
                        {
                            Id = 5,
                            GstStateCode = 10,
                            StateCode = "BR",
                            StateName = "Bihar"
                        },
                        new
                        {
                            Id = 6,
                            GstStateCode = 4,
                            StateCode = "CH",
                            StateName = "Chandigarh"
                        },
                        new
                        {
                            Id = 7,
                            GstStateCode = 22,
                            StateCode = "CG",
                            StateName = "Chhattisgarh"
                        },
                        new
                        {
                            Id = 8,
                            GstStateCode = 26,
                            StateCode = "DN",
                            StateName = "Dadra and Nagar Haveli"
                        },
                        new
                        {
                            Id = 9,
                            GstStateCode = 25,
                            StateCode = "DD",
                            StateName = "Daman and Diu"
                        },
                        new
                        {
                            Id = 10,
                            GstStateCode = 7,
                            StateCode = "DL",
                            StateName = "Delhi"
                        },
                        new
                        {
                            Id = 11,
                            GstStateCode = 30,
                            StateCode = "GA",
                            StateName = "Goa"
                        },
                        new
                        {
                            Id = 12,
                            GstStateCode = 24,
                            StateCode = "GJ",
                            StateName = "Gujarat"
                        },
                        new
                        {
                            Id = 13,
                            GstStateCode = 6,
                            StateCode = "HR",
                            StateName = "Haryana"
                        },
                        new
                        {
                            Id = 14,
                            GstStateCode = 2,
                            StateCode = "HP",
                            StateName = "Himachal Pradesh"
                        },
                        new
                        {
                            Id = 15,
                            GstStateCode = 1,
                            StateCode = "JK",
                            StateName = "Jammu and Kashmir"
                        },
                        new
                        {
                            Id = 16,
                            GstStateCode = 20,
                            StateCode = "JH",
                            StateName = "Jharkhand"
                        },
                        new
                        {
                            Id = 17,
                            GstStateCode = 29,
                            StateCode = "KA",
                            StateName = "Karnataka"
                        },
                        new
                        {
                            Id = 18,
                            GstStateCode = 32,
                            StateCode = "KL",
                            StateName = "Kerala"
                        },
                        new
                        {
                            Id = 19,
                            GstStateCode = 38,
                            StateCode = "LA",
                            StateName = "Ladakh"
                        },
                        new
                        {
                            Id = 20,
                            GstStateCode = 31,
                            StateCode = "LD",
                            StateName = "Lakshadweep"
                        },
                        new
                        {
                            Id = 21,
                            GstStateCode = 23,
                            StateCode = "MP",
                            StateName = "Madhya Pradesh"
                        },
                        new
                        {
                            Id = 22,
                            GstStateCode = 27,
                            StateCode = "MH",
                            StateName = "Maharashtra"
                        },
                        new
                        {
                            Id = 23,
                            GstStateCode = 14,
                            StateCode = "MN",
                            StateName = "Manipur"
                        },
                        new
                        {
                            Id = 24,
                            GstStateCode = 17,
                            StateCode = "ML",
                            StateName = "Meghalaya"
                        },
                        new
                        {
                            Id = 25,
                            GstStateCode = 15,
                            StateCode = "MZ",
                            StateName = "Mizoram"
                        },
                        new
                        {
                            Id = 26,
                            GstStateCode = 13,
                            StateCode = "NL",
                            StateName = "Nagaland"
                        },
                        new
                        {
                            Id = 27,
                            GstStateCode = 21,
                            StateCode = "OR",
                            StateName = "Odisha"
                        },
                        new
                        {
                            Id = 28,
                            GstStateCode = 97,
                            StateCode = "OT",
                            StateName = "Other Territory"
                        },
                        new
                        {
                            Id = 29,
                            GstStateCode = 34,
                            StateCode = "PY",
                            StateName = "Puducherry"
                        },
                        new
                        {
                            Id = 30,
                            GstStateCode = 3,
                            StateCode = "PB",
                            StateName = "Punjab"
                        },
                        new
                        {
                            Id = 31,
                            GstStateCode = 8,
                            StateCode = "RJ",
                            StateName = "Rajasthan"
                        },
                        new
                        {
                            Id = 32,
                            GstStateCode = 11,
                            StateCode = "SK",
                            StateName = "Sikkim"
                        },
                        new
                        {
                            Id = 33,
                            GstStateCode = 33,
                            StateCode = "TN",
                            StateName = "Tamil Nadu"
                        },
                        new
                        {
                            Id = 34,
                            GstStateCode = 36,
                            StateCode = "TS",
                            StateName = "Telangana"
                        },
                        new
                        {
                            Id = 35,
                            GstStateCode = 16,
                            StateCode = "TR",
                            StateName = "Tripura"
                        },
                        new
                        {
                            Id = 36,
                            GstStateCode = 9,
                            StateCode = "UP",
                            StateName = "Uttar Pradesh"
                        },
                        new
                        {
                            Id = 37,
                            GstStateCode = 5,
                            StateCode = "UA",
                            StateName = "Uttarakhand"
                        },
                        new
                        {
                            Id = 38,
                            GstStateCode = 19,
                            StateCode = "WB",
                            StateName = "West Bengal"
                        },
                        new
                        {
                            Id = 39,
                            GstStateCode = 96,
                            StateCode = "FC",
                            StateName = "Foreign Country	"
                        });
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.TransactionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgentId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BaseAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CompletedOn")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CustomerFee")
                        .HasColumnType("TEXT");

                    b.Property<int>("DistributorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseJson")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("TEXT");

                    b.Property<int>("TransactionStatusCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransactionType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Updatedby")
                        .HasColumnType("TEXT");

                    b.Property<string>("Utility")
                        .HasColumnType("TEXT");

                    b.Property<string>("UtilityPartner")
                        .HasColumnType("TEXT");

                    b.Property<string>("UtilitySubType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TransactionDb");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AddressDetail", b =>
                {
                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppUser", "AppUser")
                        .WithMany("AddressDetails")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AppUserRole", b =>
                {
                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.KycDetails", b =>
                {
                    b.HasOne("PayspotAPI.Infrastructure.Entity.AppUser", null)
                        .WithMany("KycDetails")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("PayspotAPI.Infrastructure.Entity.AppUser", b =>
                {
                    b.Navigation("AddressDetails");

                    b.Navigation("KycDetails");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
